#!/bin/sh
cd "${0%/*}" || exit                                # Run from this directory
. ${WM_PROJECT_DIR:?}/bin/tools/RunFunctions        # Tutorial run functions
#------------------------------------------------------------------------------


# Function to check for fatal error in snappyHexMesh log
check_fatal_error() {
    grep -i "fatal error" log.snappyHexMesh > /dev/null 2>&1
    return $? # Returns 0 if "fatal error" is found, 1 otherwise
}

input_stl="constant/triSurface/TPMS.stl"
python_script="findInsidePoint.py"
snappyHexMeshDict="system/snappyHexMeshDict"
Lperiod=0.01
LbigPeriod=10

runApplication  blockMesh

# Maximum number of iterations
MAX_ITERATIONS=20
iteration=0

# Run snappyHexMesh in a loop until no fatal error or max iterations
while [ "$iteration" -lt "$MAX_ITERATIONS" ]; do
    echo "Running snappyHexMesh (iteration $((iteration + 1)))..."
    runApplication snappyHexMesh -overwrite

    if ! check_fatal_error; then
        echo "snappyHexMesh completed successfully without fatal errors."
        break
    fi
    mv log.snappyHexMesh "log.SHM$iteration"
    echo "Fatal error detected in snappyHexMesh. Running modification script..."
    if ! python3 $python_script $snappyHexMeshDict $input_stl $ruota; then
        echo "Error: Modification script failed. Exiting."
        exit 1
    fi

    iteration=$((iteration + 1))
    if [ "$iteration" -ge "$MAX_ITERATIONS" ]; then
        echo "Maximum iterations ($MAX_ITERATIONS) reached. Exiting."
        exit 1
    fi
done

# Convert the mesh to mm (mesh creation is in m because of numerical problems using too small dimensions)
runApplication transformPoints -scale '0.001'
# Change the values of the cyclic boundaries from m to mm
sed -i s/"(0 -$LbigPeriod 0)"/"(0 -$Lperiod 0)"/g constant/polyMesh/boundary
sed -i s/"(0 $LbigPeriod 0)"/"(0 $Lperiod 0)"/g constant/polyMesh/boundary
sed -i s/"(0 0 -$LbigPeriod)"/"(0 0 -$Lperiod)"/g constant/polyMesh/boundary
sed -i s/"(0 0 $LbigPeriod)"/"(0 0 $Lperiod)"/g constant/polyMesh/boundary

sed -i s/"(10 0 0)"/"(0.01 0 0)"/g constant/polyMesh/boundary
sed -i s/"(-10 0 0)"/"(-0.01 0 0)"/g constant/polyMesh/boundary
# cyclicAMI is more robust than cyclic
sed -i s/"cyclic"/"cyclicAMI"/g constant/polyMesh/boundary

# renumber and check the final mesh (no layers)
runApplication renumberMesh -overwrite
runApplication checkMesh -constant -allTopology -allGeometry

restore0Dir
rm 0/T # Remove T file from 0 since inlet/outlet non cyclicAMI
runApplication decomposePar
# Run the hydraulic simulation
runParallel $(getApplication)
runApplication reconstructPar -latestTime
# run the postProcess utility to get the results for the TPMS: 
# latestTime	cubeVol	areaWet	volFluid
mv log.simpleFoam log.simpleFoamRun
runApplication simpleFoam -postProcess -func infoTPMS -latestTime # To get the mesh information
mv log.simpleFoam log.simpleFoamPost

